//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WhereMyConnections.SvcClient.StdSvcRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class CallContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogonAsUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> PropertyBagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogonAsUser {
            get {
                return this.LogonAsUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LogonAsUserField, value) != true)) {
                    this.LogonAsUserField = value;
                    this.RaisePropertyChanged("LogonAsUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XppObjectBase", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.Ax.Xpp")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WhereMyConnections.SvcClient.StdSvcRef.StdConnection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WhereMyConnections.SvcClient.StdSvcRef.PortfolioConnection))]
    public partial class XppObjectBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StdConnection", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    [System.SerializableAttribute()]
    public partial class StdConnection : WhereMyConnections.SvcClient.StdSvcRef.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.McsCmContrStatuses ContractStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContractStatusLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DebtorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.McsConnectionDirections DirectionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionTypeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EanIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateTimeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalConnectionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongtitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateTimeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.McsUtilityTypes UtilityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilityTypeLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionId {
            get {
                return this.ConnectionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionIdField, value) != true)) {
                    this.ConnectionIdField = value;
                    this.RaisePropertyChanged("ConnectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractNum {
            get {
                return this.ContractNumField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractNumField, value) != true)) {
                    this.ContractNumField = value;
                    this.RaisePropertyChanged("ContractNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.McsCmContrStatuses ContractStatus {
            get {
                return this.ContractStatusField;
            }
            set {
                if ((this.ContractStatusField.Equals(value) != true)) {
                    this.ContractStatusField = value;
                    this.RaisePropertyChanged("ContractStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractStatusLabel {
            get {
                return this.ContractStatusLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractStatusLabelField, value) != true)) {
                    this.ContractStatusLabelField = value;
                    this.RaisePropertyChanged("ContractStatusLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string County {
            get {
                return this.CountyField;
            }
            set {
                if ((object.ReferenceEquals(this.CountyField, value) != true)) {
                    this.CountyField = value;
                    this.RaisePropertyChanged("County");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Debtor {
            get {
                return this.DebtorField;
            }
            set {
                if ((object.ReferenceEquals(this.DebtorField, value) != true)) {
                    this.DebtorField = value;
                    this.RaisePropertyChanged("Debtor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.McsConnectionDirections DirectionType {
            get {
                return this.DirectionTypeField;
            }
            set {
                if ((this.DirectionTypeField.Equals(value) != true)) {
                    this.DirectionTypeField = value;
                    this.RaisePropertyChanged("DirectionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectionTypeLabel {
            get {
                return this.DirectionTypeLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionTypeLabelField, value) != true)) {
                    this.DirectionTypeLabelField = value;
                    this.RaisePropertyChanged("DirectionTypeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EanId {
            get {
                return this.EanIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EanIdField, value) != true)) {
                    this.EanIdField = value;
                    this.RaisePropertyChanged("EanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDateTimeLabel {
            get {
                return this.EndDateTimeLabelField;
            }
            set {
                if ((this.EndDateTimeLabelField.Equals(value) != true)) {
                    this.EndDateTimeLabelField = value;
                    this.RaisePropertyChanged("EndDateTimeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalConnectionId {
            get {
                return this.ExternalConnectionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalConnectionIdField, value) != true)) {
                    this.ExternalConnectionIdField = value;
                    this.RaisePropertyChanged("ExternalConnectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longtitude {
            get {
                return this.LongtitudeField;
            }
            set {
                if ((this.LongtitudeField.Equals(value) != true)) {
                    this.LongtitudeField = value;
                    this.RaisePropertyChanged("Longtitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTimeLabel {
            get {
                return this.StartDateTimeLabelField;
            }
            set {
                if ((this.StartDateTimeLabelField.Equals(value) != true)) {
                    this.StartDateTimeLabelField = value;
                    this.RaisePropertyChanged("StartDateTimeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetNumber {
            get {
                return this.StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNumberField, value) != true)) {
                    this.StreetNumberField = value;
                    this.RaisePropertyChanged("StreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.McsUtilityTypes UtilityType {
            get {
                return this.UtilityTypeField;
            }
            set {
                if ((this.UtilityTypeField.Equals(value) != true)) {
                    this.UtilityTypeField = value;
                    this.RaisePropertyChanged("UtilityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UtilityTypeLabel {
            get {
                return this.UtilityTypeLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilityTypeLabelField, value) != true)) {
                    this.UtilityTypeLabelField = value;
                    this.RaisePropertyChanged("UtilityTypeLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PortfolioConnection", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    [System.SerializableAttribute()]
    public partial class PortfolioConnection : WhereMyConnections.SvcClient.StdSvcRef.XppObjectBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.StdConnection[] AllConnectionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.StdConnection[] AllConnections {
            get {
                return this.AllConnectionsField;
            }
            set {
                if ((object.ReferenceEquals(this.AllConnectionsField, value) != true)) {
                    this.AllConnectionsField = value;
                    this.RaisePropertyChanged("AllConnections");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="McsCmContrStatuses", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum McsCmContrStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Draft = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToApprove = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approved = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToCustomer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Signed = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Loss = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="McsConnectionDirections", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum McsConnectionDirections : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Production = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Consumption = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="McsUtilityTypes", Namespace="http://schemas.datacontract.org/2004/07/Dynamics.Ax.Application")]
    public enum McsUtilityTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Electricity = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gas = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Water = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Heat = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WasteWater = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    [System.SerializableAttribute()]
    public partial class AifFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomDetailXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.FaultMessageList[] FaultMessageListArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.InfologMessage[] InfologMessageListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XppExceptionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomDetailXml {
            get {
                return this.CustomDetailXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomDetailXmlField, value) != true)) {
                    this.CustomDetailXmlField = value;
                    this.RaisePropertyChanged("CustomDetailXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.FaultMessageList[] FaultMessageListArray {
            get {
                return this.FaultMessageListArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageListArrayField, value) != true)) {
                    this.FaultMessageListArrayField = value;
                    this.RaisePropertyChanged("FaultMessageListArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.InfologMessage[] InfologMessageList {
            get {
                return this.InfologMessageListField;
            }
            set {
                if ((object.ReferenceEquals(this.InfologMessageListField, value) != true)) {
                    this.InfologMessageListField = value;
                    this.RaisePropertyChanged("InfologMessageList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XppExceptionType {
            get {
                return this.XppExceptionTypeField;
            }
            set {
                if ((this.XppExceptionTypeField.Equals(value) != true)) {
                    this.XppExceptionTypeField = value;
                    this.RaisePropertyChanged("XppExceptionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessageList", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    [System.SerializableAttribute()]
    public partial class FaultMessageList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.FaultMessage[] FaultMessageArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceOperationParameterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Document {
            get {
                return this.DocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentField, value) != true)) {
                    this.DocumentField = value;
                    this.RaisePropertyChanged("Document");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentOperation {
            get {
                return this.DocumentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentOperationField, value) != true)) {
                    this.DocumentOperationField = value;
                    this.RaisePropertyChanged("DocumentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.FaultMessage[] FaultMessageArray {
            get {
                return this.FaultMessageArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.FaultMessageArrayField, value) != true)) {
                    this.FaultMessageArrayField = value;
                    this.RaisePropertyChanged("FaultMessageArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Field {
            get {
                return this.FieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldField, value) != true)) {
                    this.FieldField = value;
                    this.RaisePropertyChanged("Field");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Service {
            get {
                return this.ServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceField, value) != true)) {
                    this.ServiceField = value;
                    this.RaisePropertyChanged("Service");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperation {
            get {
                return this.ServiceOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationField, value) != true)) {
                    this.ServiceOperationField = value;
                    this.RaisePropertyChanged("ServiceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceOperationParameter {
            get {
                return this.ServiceOperationParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceOperationParameterField, value) != true)) {
                    this.ServiceOperationParameterField = value;
                    this.RaisePropertyChanged("ServiceOperationParameter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XPath {
            get {
                return this.XPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XPathField, value) != true)) {
                    this.XPathField = value;
                    this.RaisePropertyChanged("XPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlLine {
            get {
                return this.XmlLineField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlLineField, value) != true)) {
                    this.XmlLineField = value;
                    this.RaisePropertyChanged("XmlLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlPosition {
            get {
                return this.XmlPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPositionField, value) != true)) {
                    this.XmlPositionField = value;
                    this.RaisePropertyChanged("XmlPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessage", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    [System.SerializableAttribute()]
    public partial class InfologMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WhereMyConnections.SvcClient.StdSvcRef.InfologMessageType InfologMessageTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WhereMyConnections.SvcClient.StdSvcRef.InfologMessageType InfologMessageType {
            get {
                return this.InfologMessageTypeField;
            }
            set {
                if ((this.InfologMessageTypeField.Equals(value) != true)) {
                    this.InfologMessageTypeField = value;
                    this.RaisePropertyChanged("InfologMessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
    [System.SerializableAttribute()]
    public partial class FaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologMessageType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Dynamics.AX.Framework.Services")]
    public enum InfologMessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="StdConnection", Namespace="http://schemas.std.sg/ax/std/cm/services", ConfigurationName="StdSvcRef.StdConnection1")]
    public interface StdConnection1 {
        
        // CODEGEN: Generating message contract since the wrapper name (StdConnectionGetConnectionsRequest) of message StdConnectionGetConnectionsRequest does not match the default value (getConnections)
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.std.sg/ax/std/cm/services/StdConnection/getConnections", ReplyAction="http://schemas.std.sg/ax/std/cm/services/StdConnection/getConnectionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WhereMyConnections.SvcClient.StdSvcRef.AifFault), Action="http://schemas.std.sg/ax/std/cm/services/StdConnection/getConnectionsAifFaultFaul" +
            "t", Name="AifFault", Namespace="http://schemas.microsoft.com/dynamics/2008/01/documents/Fault")]
        WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse getConnections(WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.std.sg/ax/std/cm/services/StdConnection/getConnections", ReplyAction="http://schemas.std.sg/ax/std/cm/services/StdConnection/getConnectionsResponse")]
        System.Threading.Tasks.Task<WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse> getConnectionsAsync(WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StdConnectionGetConnectionsRequest", WrapperNamespace="http://schemas.std.sg/ax/std/cm/services", IsWrapped=true)]
    public partial class StdConnectionGetConnectionsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
        public WhereMyConnections.SvcClient.StdSvcRef.CallContext CallContext;
        
        public StdConnectionGetConnectionsRequest() {
        }
        
        public StdConnectionGetConnectionsRequest(WhereMyConnections.SvcClient.StdSvcRef.CallContext CallContext) {
            this.CallContext = CallContext;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StdConnectionGetConnectionsResponse", WrapperNamespace="http://schemas.std.sg/ax/std/cm/services", IsWrapped=true)]
    public partial class StdConnectionGetConnectionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.std.sg/ax/std/cm/services", Order=0)]
        public WhereMyConnections.SvcClient.StdSvcRef.PortfolioConnection response;
        
        public StdConnectionGetConnectionsResponse() {
        }
        
        public StdConnectionGetConnectionsResponse(WhereMyConnections.SvcClient.StdSvcRef.PortfolioConnection response) {
            this.response = response;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StdConnection1Channel : WhereMyConnections.SvcClient.StdSvcRef.StdConnection1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StdConnection1Client : System.ServiceModel.ClientBase<WhereMyConnections.SvcClient.StdSvcRef.StdConnection1>, WhereMyConnections.SvcClient.StdSvcRef.StdConnection1 {
        
        public StdConnection1Client() {
        }
        
        public StdConnection1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StdConnection1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StdConnection1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StdConnection1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse WhereMyConnections.SvcClient.StdSvcRef.StdConnection1.getConnections(WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest request) {
            return base.Channel.getConnections(request);
        }
        
        public WhereMyConnections.SvcClient.StdSvcRef.PortfolioConnection getConnections(WhereMyConnections.SvcClient.StdSvcRef.CallContext CallContext) {
            WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest inValue = new WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest();
            inValue.CallContext = CallContext;
            WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse retVal = ((WhereMyConnections.SvcClient.StdSvcRef.StdConnection1)(this)).getConnections(inValue);
            return retVal.response;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse> WhereMyConnections.SvcClient.StdSvcRef.StdConnection1.getConnectionsAsync(WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest request) {
            return base.Channel.getConnectionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsResponse> getConnectionsAsync(WhereMyConnections.SvcClient.StdSvcRef.CallContext CallContext) {
            WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest inValue = new WhereMyConnections.SvcClient.StdSvcRef.StdConnectionGetConnectionsRequest();
            inValue.CallContext = CallContext;
            return ((WhereMyConnections.SvcClient.StdSvcRef.StdConnection1)(this)).getConnectionsAsync(inValue);
        }
    }
}
